program  <- IGNORE (statement IGNORE)* EOI;

statement  <- empty_statement
  / grammar_statement
  / lexer_statement
  / macro_call
  / fragment_statement IGNORE eos?
  / import_statement IGNORE eos?
  / assign_statement IGNORE eos?
;

empty_statement <- eos;

eos  <- ";";


grammar_statement  <- grammar IGNORE symbol IGNORE eos;
lexer_statement  <- grammar IGNORE symbol IGNORE eos;

grammar <- "grammar";

fragment_statement <- fragment IGNORE symbol;
fragment <- "fragment!";


import_statement  <-
    import IGNORE string IGNORE "{" IGNORE (symbol_alias IGNORE ("," IGNORE symbol_alias)* IGNORE ","?)? IGNORE "}"
  / import IGNORE string
;
import  <- "import!";

symbol_alias <- (symbol IGNORE "as" IGNORE)? symbol;

assign_statement  <- symbol IGNORE ":" IGNORE ("|"/"/")? IGNORE expr;

expr  <- expr0;
expr0 <- symbol IGNORE ("->" IGNORE channel)?
    / expr1;
expr1 <- expr1 IGNORE mark_branch? IGNORE "|" IGNORE expr1 IGNORE mark_branch?
    / expr2;
expr2 <- expr3 (IGNORE expr3)*;
expr3 <- expr3 IGNORE suffix
    / expr4;
expr4 <- prefix IGNORE expr4
    / expr5;
expr5 <- "(" IGNORE "/"? IGNORE expr IGNORE ")"
    / data;

channel <- "skip"
    / "channel" "(" symbol ")"
    / "popMode"
    / "pushMode" "(" symbol ")"
    ;

mark_branch  <- ("^"/"!"/"<"/">")? "#" symbol;
prefix  <- "~" / "&" / "^" / "*" / "%";
suffix  <- "?" / "+" / "-"/ "*";

data   <- macro_call
  / regex_range
  / list
  / symbol_path
  / integer
  / string
  ;

list   <- "{" IGNORE (data IGNORE ("," IGNORE data)* IGNORE ","?)? IGNORE "}";
// slice  <- "{" IGNORE integer IGNORE "," IGNORE integer IGNORE  "}";

regex_range  <- re#\[([^\\\]]|\\.)*\]#;

macro_call  <- "@" IGNORE symbol_path IGNORE skip_code?;
skip_code <- "{"  (skip_code / !"}" .)*  "}" ;

string  <-
    re#'([^\\']|\\.)*'#
  / re#"([^\\"]|\\.)*"#
;

integer  <- re#0|[1-9](_?[0-9])*#;

symbol_path  <-
    symbol IGNORE (("::"/".") IGNORE symbol)*
;
symbol  <- XID_IDENTIFIER;

IGNORE <- (SPACE / NEWLINE / COMMENT)?;

SPACE <- re#[\s]+#;
NEWLINE <- re#[\r\n]+#;
COMMENT <- re#//[^\r\n]*#